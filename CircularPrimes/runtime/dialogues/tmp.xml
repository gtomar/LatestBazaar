<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE scenario SYSTEM "TuTalkScenario.dtd">
<scenario default-language="en" scenario-name="isPrime-method">
	<configuration>
		
		<!-- It *is* possible to hook up a LightSide classifier to TuTalk, 
		such that the predicted labels are treated as concepts. 
		but not today. -->

	</configuration>
	
	<!-- 'Concepts' define things that students might say,
	     AND things that the tutor might say back. 
	     Tutor concepts should take the form of phrase lists.
		 Student concepts can be phrase lists, 
		 regular expressions, or lists of annotations,
	     but only one of these at a time. -->
		
	<concepts>
		<!-- this is a special kind of concept for catching unexpected student responses -->
		<concept label="unanticipated-response">
			<phrase>anything else</phrase>
		</concept>
		
		
		<!-- tutor concepts. -->
		<!-- the tutor will choose randomly between multiple phrases for a concept. -->	

		<concept label="introduction">
			<phrase>This is a placeholder scenario.</phrase>
		</concept>
		
		<concept label="confused">
			<phrase>Sorry, I don't understand what you're getting at. Can you try rephrasing?</phrase>
		</concept>
		
		<!-- end tutor concepts. -->
		
		
		<!-- student concepts. -->
		
		<!-- these match against external (MessageAnnotator) annotations. -->
		<concept label="yes" type="annotation">
			<phrase>AFFIRMATIVE</phrase>
		</concept>
		
		<concept label="no" type="annotation">
			<phrase>NEGATIVE</phrase>
		</concept>
		
		<concept label="done" type="regex">
			<phrase>done</phrase>
			<phrase>finished</phrase>
			<phrase>next</phrase>
			<phrase>move on</phrase>
		</concept>
		
		<concept label="help" type="annotation">
			<phrase>help_isPrime</phrase>
		</concept>
		
		<concept label="divisors" type="regex">
			<phrase>find the divisors</phrase>
			<phrase>divides evenly</phrase>
			<phrase>mod</phrase>
			<phrase>factors</phrase>
		</concept>
		
		<!-- these match against regular expressions. -->
		
		
		<!-- end student concepts. -->
		
	</concepts>
	
	
	<script>
		<goal name="start" difficulty="0">
			
			<!--   <step>-->
				<!-- deliver a statement from the concept named "introduction"  -->
				<!--   <initiation>introduction</initiation>
			</step> -->
			
			<step>
				<!-- Every step begins with an initiating concept or literal phrase -->
				<initiation>introduction</initiation>
				
				<!-- These are the "response" options. 
					If the concept between the tags matches the student statement, 
				    the "say" concept/phrase will be delivered by the tutor.
				    "push" adds another goal to the dialogue's stack. 
					 Note that goals should NOT be recursively nested. -->
					 
				<response say="Awesome!">yes</response>
				<response say="confused">unanticipated-response</response>
			</step>
				
			<step>
				<initiation>Done with tmp method.</initiation>
			</step>
		</goal>
		
	</script>

</scenario>
