<?xml version="1.0" encoding="UTF-8"?>
<dialogs>
	
	<dialog concept="GOAL_IDENTIFICATION" scenario="scenario-instructions">
    	
    	
    	<!-- The intro prompt is offered to students. 
    	If they respond in the affirmative, the dialogue begins.-->
        <intro>You have 50 minutes to work on the problem. Do as much as possible, but don’t worry about it if you are unable to finish.You can find a description of the problem at the top of your programming buffer. Please take a minute to read and understand it. Let me know when you’re done.</intro>
        <accept annotation="AFFIRMATIVE">Let’s make sure you understand the problem by going through our three test cases.</accept>
        <!-- This should really be a time-out-try-again rather than a cancel -->
        <cancel>Are you ready to get started?</cancel>
    </dialog>
    
    <dialog concept="MAIN" scenario="scenario-main">
    	<trigger annotation="main"/>
    	
    	<intro>Do you want to talk more about the structure of your main method?</intro>
    	<accept annotation="AFFIRMATIVE"></accept>
    	<!-- Currently not possible to return to a method, right? But ideally this would be nice. -->
        <cancel annotation="NEGATIVE">Okay, let me know if you change your mind later.</cancel>
    </dialog>
    
    <dialog concept="IS_CIRCULAR_PRIME" scenario="scenario-template">
    	<trigger annotation="isCircularPrime"/>
    	
    	<intro>TMP: talking about circular primes</intro>
    </dialog>
    
    <dialog concept="IS_PRIME" scenario="isPrime-method">
    
    	<!--  NOTE: This method is totally not done/not functional. -->
    	
        <trigger annotation="isPrime"/>
    	
    	<!-- The intro prompt is offered to students. 
    	If they respond in the affirmative, the dialogue begins.-->
        <intro>Let's go into some more detail about your method to identify primes, okay?</intro>
        <accept annotation="AFFIRMATIVE"></accept>
        <cancel annotation="NEGATIVE">Okay, let me know if you want to come back to it later.</cancel>                
        
    </dialog>
    
    <dialog concept="ROTATE_STRING" scenario="scenario-template">
    	<trigger annotation="rotate_string"/>
    	
    	<intro>TMP: talking about how we'll have a method to rotate the string</intro>
    </dialog>
    
    
</dialogs>