<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE scenario SYSTEM "TuTalkScenario.dtd">
<scenario default-language="en" scenario-name="scenario-isprime">
	<configuration>
		
		<!-- It *is* possible to hook up a LightSide classifier to TuTalk, 
		such that the predicted labels are treated as concepts. 
		but not today. -->

	</configuration>
	
	<!-- 
	Concept 1: how to determine if prime
	Concept 2: iteration
	Concept 3: check divisibility -->
		
	<concepts>
		<!-- this is a special kind of concept for catching unexpected student responses -->
		<concept label="unanticipated-response">
			<phrase>anything else</phrase>
		</concept>
		
		
		<!-- tutor concepts. -->
		<!-- the tutor will choose randomly between multiple phrases for a concept. -->	

		<concept label="introduction">
			<phrase>Optional introduction</phrase>
		</concept>
		
		<concept label="conclusion">
			<phrase>Good work. Let's move on to the next step.</phrase>
		</concept>
		
		<concept label="ask-concept-1">
			<phrase>First of all, do you know how to determine if a number is prime?</phrase>
		</concept>
		
		<concept label="ask-concept-2">
			<phrase>Okay, tell me about the type of loop you'll have in this method.</phrase>
		</concept>
		
		<concept label="ask-concept-3">
			<phrase>So, given your iterator, how will you decide whether the method should return true or false?</phrase>
		</concept>
		
		<concept label="concept-1-help">
			<phrase>The definition of a prime number is one that can only be divided by itself and 1.</phrase>
		</concept>
		
		<concept label="concept-2-help">
			<phrase>You need a loop so you can test every possible divisor of the input number.</phrase>
		</concept>
		
		<concept label="concept-3-help">
			<phrase>Each number of your iteration is a possible divisor. What does it mean if you can divide? What does it mean if you can't?</phrase>
		</concept>
		
		<concept label="explain-concept-1">
			<phrase>For the purpose of this exercise we'd like you to iterate through every possible divisor and see if your input can be divided by it.</phrase>
		</concept>
		
		<concept label="explain-concept-2">
			<phrase>You should have an iterator that goes from 2 up to (input-1).</phrase>
		</concept>
		
		<concept label="explain-concept-3">
			<phrase>For each number (i) up to the input (n), you should try n/i. If the remainder is 0, that means n is not prime, so you can safely return False. If you finish iterating and have not found any divisors, then you can return True.
I recommend using the mod function (n%i) to test for divisibility.</phrase>
		</concept>
		
		<concept label="ok">
			<phrase>Okay</phrase>
			<phrase>Good</phrase>
			<phrase>Great</phrase>
			<phrase>Correct!</phrase>
			<phrase>Wonderful</phrase>
			<phrase>Perfect</phrase>
			<phrase>Exactly</phrase>
			<phrase>You're right</phrase>
			<phrase>Spot on</phrase>
			<phrase>Good work</phrase>
			<phrase>That's correct</phrase>
			<phrase>Good job</phrase>
		</concept>
		
		<concept label="wrong">
			<phrase>Not quite...</phrase>
			<phrase>Almost...</phrase>
			<phrase>Sorry...</phrase>
			<phrase>Try again?</phrase>
		</concept>
		<!-- end tutor concepts. -->
		
		
		<!-- student concepts. -->
		
		<!-- these match against external (MessageAnnotator) annotations. -->
		<concept label="yes" type="annotation">
			<phrase>AFFIRMATIVE</phrase>
		</concept>
		
		<concept label="no" type="annotation">
			<phrase>NEGATIVE</phrase>
		</concept>
		
		<concept label="concept-1-right-answer" type="annotation">
			<phrase>ISPRIME_METHOD</phrase>
		</concept>
		
		<concept label="concept-2-right-answer" type="annotation">
			<phrase>ISPRIME_ITERATE</phrase>
		</concept>
		
		<concept label="concept-3-right-answer" type="annotation">
			<phrase>ISPRIME_DIVIDE</phrase>
		</concept>
		
		<!-- these match against regular expressions. -->
		
		
		
		<!-- end student concepts. -->
		
	</concepts>
	
	
	<script>
		<goal name="start" difficulty="0">
			
			<!--   <step>-->
				<!-- OPTIONAL INTRODUCTION  -->
				<!--   <initiation>introduction</initiation>
			</step> -->
			
			<step>
				<!-- Every step begins with an initiating concept or literal phrase -->
				<initiation>ask-concept-1</initiation>
				
				<!-- These are the "response" options. 
					If the concept between the tags matches the student statement, 
				    the "say" concept/phrase will be delivered by the tutor.
				    "push" adds another goal to the dialogue's stack. 
					 Note that goals should NOT be recursively nested. -->
				
				<response push="concept_2" say="ok">concept-1-right-answer</response>
                
				<!-- unanticipated-response is special: it's anything that doesn't match one of the above. -->
				<response push="concept_1_help" say="wrong">unanticipated-response</response>
			</step>
			
			
			<step>
				<initiation>conclusion</initiation>
			</step>
		</goal>
		
		<!-- Goals are referenced by their names. "difficulty" is meaningless for now. -->
		
		<goal name="concept_2" difficulty="0">
			<step>
				<initiation>ask-concept-2</initiation>
                <response push="concept_3" say="ok">concept-2-right-answer</response>
                <response push="concept_2_help" say="wrong">unanticipated-response</response>
			</step>
		</goal>
		
		<goal name="concept_3" difficulty="0">
			<step>
				<initiation>ask-concept-3</initiation>
                <response say="ok">concept-3-right-answer</response>
                <response push="concept_3_help" say="wrong">unanticipated-response</response>
			</step>
		</goal>
		
		<goal name="concept_1_help" difficulty="0">
			<step>
				<initiation>concept-1-help</initiation>
				<response push="concept_2" say="ok">concept-1-right-answer</response>
				<response push="concept_2" say="explain-concept-1">unanticipated-response</response>
			</step>
		</goal>
		
		<goal name="concept_2_help" difficulty="0">
			<step>
				<initiation>concept-2-help</initiation>
				<response push="concept_3" say="ok">concept-2-right-answer</response>
				<response push="concept_3" say="explain-concept-2">unanticipated-response</response>
			</step>
		</goal>
		
		<goal name="concept_3_help" difficulty="0">
			<step>
				<initiation>concept-3-help</initiation>
				<response say="ok">concept-3-right-answer</response>
				<response say="explain-concept-3">unanticipated-response</response>
			</step>
		</goal>
		
	</script>

</scenario>
