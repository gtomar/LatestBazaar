	<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE scenario SYSTEM "TuTalkScenario.dtd">
<scenario default-language="en" scenario-name="animal_example">
	<configuration>
		
		<!-- It *is* possible to hook up a LightSide classifier to TuTalk, 
		such that the predicted labels are treated as concepts. 
		but not today. -->
			
		<!-- 	
		<module kind="model" name="animals"
			classname="edu.cmu.cs.lti.tutalk.module.SidePredictor">
			<param key="path" value="models/animals.ser" />
		</module> 
		-->

	</configuration>

	<!-- I'm not entirely sure what these are used for. -->
	<transitions>
		<transition ack-type="agree" floor-status="neutral">
			<tphrase> yes </tphrase>
			<tphrase> okay </tphrase>
		</transition>
	
		<transition ack-type="none">
			<tphrase> moving on... </tphrase>
		</transition>
	</transitions>
	
	<!-- 'Concepts' define things that students might say,
	     AND things that the tutor might say back. 
	     Tutor concepts should take the form of phrase lists.
		 Student concepts can be phrase lists, 
		 regular expressions, or lists of annotations,
	     but only one of these at a time. -->
		
	<concepts>
		<!-- this is a special kind of concept for catching unexpected student responses -->
		<concept label="unanticipated-response">
			<phrase>anything else</phrase>
		</concept>
		
		
		<!-- tutor concepts. -->
		<concept label="introduction">
			<phrase>I can help you to decide the type of recorder api to be used and example code snippet to do it.</phrase>
		</concept>
		
		<concept label="api_question">
			<phrase>Do you know or decided on any recorder api that can be used?</phrase>
		</concept>
		
		<!-- the tutor will choose randomly between multiple phrases for a concept. -->
		<concept label="facts">
			<phrase>You can record audio using the MediaRecorder or AudioRecord APIs if supported by the device hardware</phrase>
			<phrase>Trout are fish that swim in streams.</phrase>
		</concept>
		
		<concept label="unrecognized">
			<phrase>I don't know what that is.</phrase>
			<phrase>That doesn't make sense to me.</phrase>
		</concept>
		
		<concept label="correct">
			<phrase>Well done!</phrase>
			<phrase>Okeydoke.</phrase>
			<phrase>Sounds good...</phrase>
		</concept>
		
		<concept label="incorrect_birth">
			<phrase>Fish and birds lay eggs. Mammals give birth to live young, and give their babies milk!</phrase>
		</concept>
		
		<concept label="ok">
			<phrase>Ok</phrase>
		</concept>
		
		<concept label="ar">
			<phrase>Use following code snippet to use AudioRecord import android.media.AudioRecord; AudioRecord Recorder_obj = null;</phrase>
		</concept>
		
		<concept label="mr">
			<phrase>Use following code snippet to use MediaRecorder import android.media.MediaRecorder; MediaRecorder Recorder_obj = null;</phrase>
		</concept>
		
		<concept label="congrats">
			<phrase>You're ready to be a zoologist!</phrase>
		</concept>
		
		<concept label="dont_be_clever">
			<phrase>Aren't you clever?</phrase>
		</concept>
		<!-- ent tutor concepts. -->
		
		
		<!-- student concepts. -->
		
		<!-- these match against external (MessageAnnotator) annotations. -->
		<concept label="yes" type="annotation">
			<phrase>AFFIRMATIVE</phrase>
		</concept>
		
		<concept label="no" type="annotation">
			<phrase>NEGATIVE</phrase>
		</concept>
		
		<!-- these match against regular expressions. -->
		
		<concept label="audiorecord" type="regex">
			<phrase>AudioRecord</phrase>
		</concept>
		
		
		<concept label="mediarecorder" type="regex">
			<phrase>MediaRecorder</phrase>
		</concept>
		
		<concept label="mammal" type="regex">
			<phrase>mammal|cow|dog|cat|human|gerbil|whale|elephant</phrase>
			<phrase>fur|hair|milk|warm</phrase>
		</concept>
		
		<!-- end student concepts. -->
		
	</concepts>
	
	
	<script>
		<goal name="start" difficulty="1">
			
			<step>
				<!-- deliver a statement from the concept named "introduction"  -->
				<initiation>introduction</initiation>
			</step>
			
			<step>
				<!-- Every step begins with an initating concept or literal phrase -->
				<initiation>api_question</initiation>
				
				<!-- These are the "response" options. 
					If the concept between the tags matches the student statement, 
				    the "say" concept/phrase will be delivered by the tutor.
				    "push" adds another goal to the dialogue's stack. 
					 Note that goals should NOT be recursively nested. -->
					
				<!--  <response push="elicitate" say="ok">yes</response> -->
				<response push="remediate" say="ok">no</response>
                
				<!-- unanticipated-response is special: it's anything that doesn't match one of the above. -->
				<response push="remediate" say="ok">unanticipated-response</response>
			</step>
			
			
			<step>
				<initiation>congrats</initiation>
			</step>
		</goal>
		
		<!-- Goals are referenced by their names. "difficulty" is meaningless for now. -->
		<goal name="remediate" difficulty="0">
			<step>
				<initiation>Maybe this will help:</initiation>
			</step>
			<step>
				<!-- deliver a statement from the concept named "facts"  -->
				<initiation>facts</initiation>
			</step>
			<step>
				<initiation>Which one you will like to choose?</initiation>
                <response say="mr">mediarecorder</response>
				<response say="ar">audiorecord</response>
			</step>
		</goal>
	</script>

</scenario>
